{
  "stats": {
    "suites": 5,
    "tests": 8,
    "passes": 8,
    "pending": 0,
    "failures": 0,
    "start": "2024-05-15T01:06:47.096Z",
    "end": "2024-05-15T01:06:47.110Z",
    "duration": 14,
    "testsRegistered": 8,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6fd9af02-baef-42e3-9d83-9b3d1bfeec5f",
      "title": "",
      "fullFile": "C:\\Users\\diego\\OneDrive\\Desktop\\Epam_Testing\\num-validator\\test\\NumbersValidator.test.js",
      "file": "\\test\\NumbersValidator.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ec2f2e1f-4329-4b43-993e-067e2c80de4b",
          "title": "NumbersValidator",
          "fullFile": "C:\\Users\\diego\\OneDrive\\Desktop\\Epam_Testing\\num-validator\\test\\NumbersValidator.test.js",
          "file": "\\test\\NumbersValidator.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "81cbce1d-e49f-475c-b9c1-b4f07af263a1",
              "title": "#isNumberEven()",
              "fullFile": "C:\\Users\\diego\\OneDrive\\Desktop\\Epam_Testing\\num-validator\\test\\NumbersValidator.test.js",
              "file": "\\test\\NumbersValidator.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for even numbers",
                  "fullTitle": "NumbersValidator #isNumberEven() should return true for even numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(validator.isNumberEven(4), true);",
                  "err": {},
                  "uuid": "0571a21c-91e9-4365-92e4-bf6fe4317fad",
                  "parentUUID": "81cbce1d-e49f-475c-b9c1-b4f07af263a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error for non-number inputs",
                  "fullTitle": "NumbersValidator #isNumberEven() should throw error for non-number inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(() => validator.isNumberEven('4'), Error);",
                  "err": {},
                  "uuid": "afccac8b-ed9d-4939-a56a-a7d8577a3b7f",
                  "parentUUID": "81cbce1d-e49f-475c-b9c1-b4f07af263a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0571a21c-91e9-4365-92e4-bf6fe4317fad",
                "afccac8b-ed9d-4939-a56a-a7d8577a3b7f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "faf809d0-ade0-408b-bccd-4c02a416afa5",
              "title": "#getEvenNumbersFromArray()",
              "fullFile": "C:\\Users\\diego\\OneDrive\\Desktop\\Epam_Testing\\num-validator\\test\\NumbersValidator.test.js",
              "file": "\\test\\NumbersValidator.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return only even numbers from array",
                  "fullTitle": "NumbersValidator #getEvenNumbersFromArray() should return only even numbers from array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.deepStrictEqual(validator.getEvenNumbersFromArray([1, 2, 3, 4, 5, 6]), [2, 4, 6]);",
                  "err": {},
                  "uuid": "6044295b-d070-46c2-99b2-c137b2e5e7d5",
                  "parentUUID": "faf809d0-ade0-408b-bccd-4c02a416afa5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw error for non-array inputs",
                  "fullTitle": "NumbersValidator #getEvenNumbersFromArray() should throw error for non-array inputs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.throws(() => validator.getEvenNumbersFromArray(\"not an array\"), Error);",
                  "err": {},
                  "uuid": "df423dc6-2f29-447d-b8bb-fe471357025d",
                  "parentUUID": "faf809d0-ade0-408b-bccd-4c02a416afa5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6044295b-d070-46c2-99b2-c137b2e5e7d5",
                "df423dc6-2f29-447d-b8bb-fe471357025d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d4807d30-e06f-4c14-a1f3-acbdf90bade9",
              "title": "#isAllNumbers()",
              "fullFile": "C:\\Users\\diego\\OneDrive\\Desktop\\Epam_Testing\\num-validator\\test\\NumbersValidator.test.js",
              "file": "\\test\\NumbersValidator.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if all elements are numbers",
                  "fullTitle": "NumbersValidator #isAllNumbers() should return true if all elements are numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(validator.isAllNumbers([1, 2, 3]), true);",
                  "err": {},
                  "uuid": "ae458a0f-ba81-4d36-b97a-22353c04c2c6",
                  "parentUUID": "d4807d30-e06f-4c14-a1f3-acbdf90bade9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if any element is not a number",
                  "fullTitle": "NumbersValidator #isAllNumbers() should return false if any element is not a number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(validator.isAllNumbers([1, '2', 3]), false);",
                  "err": {},
                  "uuid": "1d0010f8-cafd-428a-bbff-46f001d1b54a",
                  "parentUUID": "d4807d30-e06f-4c14-a1f3-acbdf90bade9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae458a0f-ba81-4d36-b97a-22353c04c2c6",
                "1d0010f8-cafd-428a-bbff-46f001d1b54a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e2711bff-1bc2-46fa-ad89-728ab4668cce",
              "title": "#isInteger()",
              "fullFile": "C:\\Users\\diego\\OneDrive\\Desktop\\Epam_Testing\\num-validator\\test\\NumbersValidator.test.js",
              "file": "\\test\\NumbersValidator.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for integers",
                  "fullTitle": "NumbersValidator #isInteger() should return true for integers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(validator.isInteger(4), true);",
                  "err": {},
                  "uuid": "50461799-90e7-4ca2-bda8-a57a40f7ee14",
                  "parentUUID": "e2711bff-1bc2-46fa-ad89-728ab4668cce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-integers",
                  "fullTitle": "NumbersValidator #isInteger() should return false for non-integers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.strictEqual(validator.isInteger(4.5), false);",
                  "err": {},
                  "uuid": "6af96484-4fd7-4bac-b9fe-45531bd57da1",
                  "parentUUID": "e2711bff-1bc2-46fa-ad89-728ab4668cce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50461799-90e7-4ca2-bda8-a57a40f7ee14",
                "6af96484-4fd7-4bac-b9fe-45531bd57da1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}